# Generated by roxygen2: do not edit by hand

S3method(as.data.frame,geoda)
S3method(as.matrix,Weight)
S3method(summary,Weight)
export(as.geoda)
export(azp_greedy)
export(azp_sa)
export(azp_tabu)
export(create_weights)
export(distance_weights)
export(eb_rates)
export(gda_distance_weights)
export(gda_kernel_knn_weights)
export(gda_kernel_weights)
export(gda_knn_weights)
export(gda_min_distthreshold)
export(gda_queen_weights)
export(gda_rook_weights)
export(geoda_open)
export(get_neighbors)
export(get_neighbors_weights)
export(has_isolates)
export(hinge15_breaks)
export(hinge30_breaks)
export(is_symmetric)
export(join_count_ratio)
export(kernel_knn_weights)
export(kernel_weights)
export(knn_weights)
export(lisa_bo)
export(lisa_clusters)
export(lisa_colors)
export(lisa_fdr)
export(lisa_labels)
export(lisa_num_nbrs)
export(lisa_pvalues)
export(lisa_values)
export(local_bijoincount)
export(local_bimoran)
export(local_g)
export(local_geary)
export(local_gstar)
export(local_joincount)
export(local_moran)
export(local_moran_eb)
export(local_multigeary)
export(local_multijoincount)
export(local_multiquantilelisa)
export(local_quantilelisa)
export(make_spatial)
export(max_neighbors)
export(maxp_greedy)
export(maxp_sa)
export(maxp_tabu)
export(mean_neighbors)
export(median_neighbors)
export(min_distthreshold)
export(min_neighbors)
export(natural_breaks)
export(neighbor_match_test)
export(p_GeoDa)
export(p_GeoDaTable)
export(p_GeoDaWeight)
export(p_LISA)
export(percentile_breaks)
export(quantile_breaks)
export(queen_weights)
export(read_gal)
export(read_gwt)
export(read_swm)
export(redcap)
export(rook_weights)
export(save_weights)
export(schc)
export(set_neighbors)
export(set_neighbors_with_weights)
export(sf_to_geoda)
export(skater)
export(sp_to_geoda)
export(spatial_lag)
export(spatial_validation)
export(stddev_breaks)
export(update_weights)
export(weights_sparsity)
exportClasses(LISA)
exportClasses(Weight)
exportClasses(geoda)
exportClasses(p_GeoDa)
exportClasses(p_GeoDaTable)
exportClasses(p_GeoDaWeight)
exportClasses(p_LISA)
importFrom(Rcpp,evalCpp)
importFrom(digest,digest)
importFrom(methods,is)
importFrom(methods,new)
useDynLib(rgeoda)
